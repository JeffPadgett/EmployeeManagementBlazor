@page "/"
@using StreamServices.Dto
@inject HttpClient _httpClient

<PageTitle>Index</PageTitle>

<MudPaper Class="pa-4 ma-2">
    <MudGrid>

        <MudItem xs="6">

            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">The Story Book</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default" />
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>
                    <MudText>This day everything happend.</MudText>
                    <MudText Typo="Typo.body2">The quick, brown fox jumps over a lazy dog.</MudText>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Text" Color="Color.Primary">Read More</MudButton>
                </MudCardActions>
            </MudCard>

            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                    </CardHeaderContent>
                    <CardHeaderActions>
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>
                    <MudCheckBox @bind-Checked="@follow" Dense="true" Color="Color.Success">Follow</MudCheckBox>
                    <MudCheckBox @bind-Checked="@unFollow" Dense="false" Color="Color.Primary">Un Follow</MudCheckBox>
                    <MudCheckBox @bind-Checked="@streamOnline" Dense="true" Color="Color.Tertiary">Stream Online</MudCheckBox>
                    <MudCheckBox @bind-Checked="@streamOffline" Dense="false" Color="Color.Warning">Stream Offline</MudCheckBox>
                    <MudItem xs="12" sm="6" md="4">
                        <MudTextField @bind-Value="StreamerName" Label="Streamer Name" Variant="Variant.Outlined" Placeholder="Works!"></MudTextField>
                    </MudItem>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary">Subscribe to Events!</MudButton>
                </MudCardActions>
            </MudCard>

        </MudItem>

        <MudItem xs="6">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Current Subscriptions</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default" />
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>
                    <MudTable Items="@subscribers" Hover="true" Breakpoint="Breakpoint.Sm" @ref="mudTable"
                              T="SubscriptionDto">
                        <HeaderContent>
                            <MudTh>Name</MudTh>
                            <MudTh>Type</MudTh>
                            <MudTh>Status</MudTh>
                            <MudTh>Delete</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Namer">@context.Name</MudTd>
                            <MudTd DataLabel="Type">@context.Type</MudTd>
                            <MudTd DataLabel="Status">@context.Status</MudTd>
                            <MudTd DataLabel="Delete">
                                <MudIconButton OnClick="((e) => DeleteEventSub(context))" Icon="@Icons.Material.Filled.Delete" aria-label="delete"></MudIconButton>
                            </MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudCardContent>
                <MudCardActions>
                    @* <MudButton Variant="Variant.Text" Color="Color.Primary">Read More</MudButton>*@
                </MudCardActions>
            </MudCard>
        </MudItem>

    </MudGrid>
</MudPaper>

@code {

    List<SubscriptionDto> subscribers;
    private MudTable<SubscriptionDto> mudTable;

    private string StreamerName;

    bool follow;
    bool unFollow;
    bool streamOnline;
    bool streamOffline;

    protected override async Task OnInitializedAsync()
    {
        subscribers = new();
        AddTempList();
        await Task.Delay(0);
    }


    void AddTempList()
    {
        subscribers.Add(new SubscriptionDto { Name = "Test", Status = "Active", Type = "stream.online" });
        subscribers.Add(new SubscriptionDto { Name = "Test", Status = "Active", Type = "user.follow" });
        subscribers.Add(new SubscriptionDto { Name = "Test", Status = "Active", Type = "stream.offline" });
    }

    void DeleteEventSub(SubscriptionDto subscription)
    {
        Console.WriteLine($"{subscription.Type} for {subscription.Name} deleted");
        subscribers.Remove(subscription);
    }

}
